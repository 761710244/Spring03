<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--
    @Controller, 标记在控制层的类注册成为Bean
    @Service, 标记在业务逻辑层的类注册成为Bean
    @Repository, 标记在数据访问层的类注册成为Bean
    @Component, 标记在非三层的普通的类注册成为Bean
    不是非要每个层对应相应的注解，这样做的原因：1、增强可读性; 2、利于Spring管理，如扫描包中可以设置排除扫描和包含扫描
    使用注解将一个类注册为Bean的步骤:1.设置扫描包context:component-scan; 2.在对应的类名上加上对应的注解
    -->

    <!--使用xml加载bean: -->
    <!--    <bean class="cn.tulingxueyuan.Controller.UserController" id="userController"></bean>-->

    <!--    扫描包
    base-package:设置需要扫描的包;
    排除扫描:exclude-filter,设置需要排除扫描的选项
    包含扫描:include-filter,设置需要包含扫描的选项
    type:1.annotation,注解;2.assignable,类的限定名
    use-default-filters:默认为true,意思是是否全部默认扫描
    -->
    <context:component-scan base-package="cn.tulingxueyuan" use-default-filters="true">
        <!--     <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>-->
        <!--     <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>-->
        <!--     <context:include-filter type="assignable" expression="cn.tulingxueyuan.Dao.impl.UserDaoImpl"/>-->
    </context:component-scan>

    <!--设置外部文件的设置项, 可以通过@Value获取里面的key值-->
    <context:property-placeholder location="db.properties"></context:property-placeholder>
</beans>